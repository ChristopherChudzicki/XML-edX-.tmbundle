<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>content</key>
	<string>&lt;script type="loncapa/python"&gt;
&lt;![CDATA[
def is_number(s):
  try:
    float(s)
    return True
  except ValueError:
    return False
def str_to_vec(string):
  string = string.strip("(")
  string = string.strip(")")
  for x in string.split(","):
    if not is_number(x):
      return "Cannot parse input as vector"
  return [float(x) for x in string.split(",")]

def vector_near(expect,answer):
	'''the student's answer is considered close enough if:
	|answer-expect|^2 &lt; tol *  |expect|^2'''
  answer = str_to_vec(answer)
  expect = str_to_vec(expect)
  if answer == "Cannot parse input as vector":
    return {'ok':False,'msg':"Having trouble interpreting input as a vector."}
  if len(answer) != len(expect):
    return {'ok':False, 'msg': 'your vector input has the wrong number of components'}
  tol = 0.05
  difference_norm_sq = 0
  expect_norm_sq = 0
  for j in range(len(answer)):
    expect_norm = +expect[j]**2
  for j in range(len(answer)):
    Dj = expect[j]-answer[j]
    difference_norm_sq += Dj**2
  if difference_norm_sq &lt; tol*expect_norm_sq:
    return True	
]]&gt;
&lt;/script&gt;

	&lt;customresponse cfn="vector_near" expect="(5,3)"&gt;
		&lt;textline size="5" label="What is (2,1) + (3,2)?" trailing_text=""/&gt;
	&lt;/customresponse&gt;</string>
	<key>name</key>
	<string>script:vectornear</string>
	<key>uuid</key>
	<string>965C1864-E4C9-45BA-9DD3-2D8A150EED06</string>
</dict>
</plist>
